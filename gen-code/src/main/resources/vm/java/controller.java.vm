package ${packageName}.controller;

import java.util.List;

import com.ci.erp.gen.common.security.annotation.RequiresPermissions;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ci.erp.gen.common.log.annotation.Log;
import com.ci.erp.gen.common.log.enums.BusinessType;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import com.yushiji.code.common.core.web.controller.BaseController;
import com.yushiji.code.common.core.web.domain.AjaxResult;
import com.ci.erp.gen.common.security.utils.ExcelUtil;
#if($table.crud || $table.sub)
import com.yushiji.code.common.core.web.page.TableDataInfo;
#elseif($table.tree)
#end

/**
 * ${functionName}Controller
 *
 * @author ${author}
 * @date ${datetime}
 */
@Slf4j
@RestController
@RequestMapping("/${businessName}")
public class ${ClassName}Controller extends BaseController {
    @Autowired
    private I${ClassName}Service ${className}Service;


    /**
     * 查询列表
     */
    @RequiresPermissions("${permissionPrefix}:query")
    @Log(title = "${functionName}-查询", businessType = BusinessType.LIST)
    @GetMapping("/list")
    public TableDataInfo list(${ClassName} ${className}) {
        startPage();
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return getDataTable(list);
    }


    /**
     * 获取详细信息
     */
    @RequiresPermissions("${permissionPrefix}:query")
    @Log(title = "${functionName}-查询", businessType = BusinessType.LIST)
    @GetMapping(value = "/getById/{${pkColumn.javaField}}")
    public AjaxResult getInfo(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return AjaxResult.success(${className}Service.selectBy${pkColumn.capJavaField}(${pkColumn.javaField}));
    }

    /**
     * 新增
     */
    @RequiresPermissions("${permissionPrefix}:add")
    @Log(title = "${functionName}-新增", businessType = BusinessType.INSERT)
    @PostMapping("/add")
    public AjaxResult add(@RequestBody ${ClassName} ${className}) {
        return toAjax(${className}Service.add${ClassName}(${className}));
    }

    /**
     * 修改
     */
    @RequiresPermissions("${permissionPrefix}:edit")
    @Log(title = "${functionName}-编辑", businessType = BusinessType.UPDATE)
    @PostMapping("/update")
    public AjaxResult edit(@RequestBody ${ClassName} ${className}) {
        return toAjax(${className}Service.update(${className}));
    }

    /**
     * 删除
     */
    @RequiresPermissions("${permissionPrefix}:remove")
    @Log(title = "${functionName}-删除", businessType = BusinessType.DELETE)
    @PostMapping("/delete")
    public AjaxResult remove(@RequestBody ${pkColumn.javaType}[] ${pkColumn.javaField}s) {
        return toAjax(${className}Service.deleteBy${pkColumn.capJavaField}s(${pkColumn.javaField}s));
    }

    /**
     * 存档
     */
    @RequiresPermissions("${permissionPrefix}:edit")
    @Log(title = "${functionName}-存档", businessType = BusinessType.UPDATE)
    @PostMapping(value = "/archive")
    public AjaxResult archive(@RequestBody ${pkColumn.javaType}[] ${pkColumn.javaField}s) {
        ${className}Service.archive(${pkColumn.javaField}s);
        return AjaxResult.success();
    }

    /**
     * 取消存档
     */
    @RequiresPermissions("${permissionPrefix}:edit")
    @Log(title = "${functionName}-取消存档", businessType = BusinessType.UPDATE)
    @PostMapping(value = "/cancelArchive")
    public AjaxResult cancelArchive(@RequestBody ${pkColumn.javaType}[] ${pkColumn.javaField}s) {
            ${className}Service.cancelArchive(${pkColumn.javaField}s);
        return AjaxResult.success();
    }

    /**
     * 导出
     */
    @RequiresPermissions("${permissionPrefix}:query")
    @Log(title = "${functionName}-导出", businessType = BusinessType.EXPORT)
    @PostMapping(value = "/export")
    public void export(@RequestBody ${ClassName} ${className}) {

        List<${ClassName}> resultList;
        //选择订单导出
        if(${className}.getIncludeIds().size() > 0){
            //查询出需要导出的数据
            ${ClassName} selectList = new ${ClassName}();
            selectList.setIncludeIds(${className}.getIncludeIds());
            resultList = ${className}Service.select${ClassName}List(${className});

        }else{//条件查询导出
            //排掉前端的勾选列表
            ${className}.setIncludeIds(null);
            resultList = ${className}Service.select${ClassName}List(${className});
        }
        ${className}Service.exportExcel(resultList);
    }
}
